#include "bcm2708_common.dtsi"

/ {
	compatible = "brcm,bcm2710","brcm,bcm2709";
	model = "BCM2710";

	chosen {
		/* No padding required - the boot loader can do that. */
		bootargs = "";
	};

	soc {
		ranges = <0x7e000000 0x3f000000 0x01000000>,
		         <0x40000000 0x40000000 0x00040000>;
#ifdef RPI364
		dma-ranges = <0xc0000000 0x00000000 0x3f000000>;
#endif

		local_intc: local_intc {
			compatible = "brcm,bcm2836-l1-intc";
			reg = <0x40000000 0x100>;
			interrupt-controller;
			#interrupt-cells = <1>;
			interrupt-parent = <&local_intc>;
		};

#ifdef RPI364
		arm-pmu {
			compatible = "arm,armv8-pmuv3";
			interrupt-parent = <&local_intc>;
			interrupts = <9>;
		};
#else
		arm-pmu {
			compatible = "arm,cortex-a7-pmu";
			interrupt-parent = <&local_intc>;
			interrupts = <9>;
		};
#endif
		gpiomem {
			compatible = "brcm,bcm2835-gpiomem";
			reg = <0x7e200000 0x1000>;
			status = "okay";
		};

#ifdef RPI364
		timer {
			compatible = "arm,armv8-timer";
			clock-frequency = <19200000>;
			interrupt-parent = <&local_intc>;
			interrupts = <0>, // PHYS_SECURE_PPI
				     <1>, // PHYS_NONSECURE_PPI
				     <3>, // VIRT_PPI
				     <2>; // HYP_PPI
			always-on;
		};
#else
		timer {
			compatible = "arm,armv7-timer";
			clock-frequency = <19200000>;
			interrupt-parent = <&local_intc>;
			interrupts = <0>, // PHYS_SECURE_PPI
				     <1>, // PHYS_NONSECURE_PPI
				     <3>, // VIRT_PPI
				     <2>; // HYP_PPI
			always-on;
		};
#endif
		syscon@40000000 {
			compatible = "brcm,bcm2836-arm-local", "syscon";
			reg = <0x40000000 0x100>;
		};
	};

#ifdef RPI364
        firmware {
                optee {
                        compatible = "linaro,optee-tz";
                        method = "smc";
                };
        };

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	cpus: cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		v8_cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x0>;
			clock-frequency = <1200000000>;
		};

		v8_cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x1>;
			clock-frequency = <1200000000>;
			enable-method = "psci";
		};

		v8_cpu2: cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x2>;
			clock-frequency = <1200000000>;
                        enable-method = "psci";
		};

		v8_cpu3: cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x3>;
			clock-frequency = <1200000000>;
                        enable-method = "psci";
		};
	};

	__overrides__ {
		arm_freq = <&v8_cpu0>, "clock-frequency:0",
		       <&v8_cpu1>, "clock-frequency:0",
		       <&v8_cpu2>, "clock-frequency:0",
		       <&v8_cpu3>, "clock-frequency:0";
	};

#else
	cpus: cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		v7_cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			reg = <0x000>;
			clock-frequency = <800000000>;
		};

		v7_cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			reg = <0x001>;
			clock-frequency = <800000000>;
		};

		v7_cpu2: cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			reg = <0x002>;
			clock-frequency = <800000000>;
		};

		v7_cpu3: cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a7";
			reg = <0x003>;
			clock-frequency = <800000000>;
		};
	};

	__overrides__ {
		arm_freq = <&v7_cpu0>, "clock-frequency:0",
		       <&v7_cpu1>, "clock-frequency:0",
		       <&v7_cpu2>, "clock-frequency:0",
		       <&v7_cpu3>, "clock-frequency:0";
	};

#endif


};

&watchdog {
	status = "okay";
};

&intc {
        compatible = "brcm,bcm2836-armctrl-ic";
#ifdef RPI364
	reg = <0x7e00b200 0x200>;
#endif
        interrupt-parent = <&local_intc>;
        interrupts = <8>;
};
